<?php

require_once __DIR__ . '/Config.php';
require_once __DIR__ . '/lib/Request.php';

// Global configuration file.
// This is just a sample file. Copy this over to config.php and edit.

// Here is the essential configuration. You only need to modify this
// to get it working.

// Secret code
// Random string used as salt in various places where hashing is needed.
// For security reasons, this should be changed when uploading to a production
// website.
define('IA_SECRET', 'developersetup');

// Mail setup
define('IA_MAIL_SENDER_NO_REPLY', 'infoarena <no-reply@infoarena.ro>');

// Enable this only if you have a SMTP server around
define('IA_SMTP_ENABLED', false);

if (IA_SMTP_ENABLED) {
    // only if SMTP is enabled, you can configure these
    define('IA_SMTP_HOST', 'localhost');
    define('IA_SMTP_PORT', '25');
}

// Disable mysql_unbuffered_query
define('IA_DB_MYSQL_UNBUFFERED_QUERY', false);

// Enable the DB cache by default.
// If it's broken then you have a bug.
// Disabling it might still be useful for mysql tweaking.
define('IA_ENABLE_DB_CACHE', true);

// Enabled the create_function_cached cached.
// If false then create_function_cached_cached is the same
// as create_function_cached
define('IA_ENABLE_CREATE_FUNCTION_CACHE', true);


// Disable memory cache by default because it requires additional stuff
define('IA_MEM_CACHE_METHOD', 'none');

// Default TTL for cache items.
define('IA_MEM_CACHE_EXPIRATION', 3600);

// TTL for tag caches.
define('IA_MEM_CACHE_TAGS_EXPIRATION', 3600);

// Maximum tags to use in cache
define('IA_MAX_TAGS_TO_CACHE', 2);

if (IA_MEM_CACHE_METHOD === 'memcached') {
    define('IA_MEMCACHED_HOST', '127.0.0.1');
    define('IA_MEMCACHED_PORT', 11211);

    // Round TTL.
    define('IA_MEM_CACHE_ROUND_EXPIRATION', 3600);

    // Task TTL.
    define('IA_MEM_CACHE_TASK_EXPIRATION', 3600);
} else {
    // Smaller TTLs because evaluator doesn't have access to cache to
    // invalidate old data on updates.

    // Round TTL.
    define('IA_MEM_CACHE_ROUND_EXPIRATION', 10);

    // Task TTL.
    define('IA_MEM_CACHE_TASK_EXPIRATION', 10);
}

// Logging options. Anything else in normal operation is a bug.
// Filling error_log on a production machine sucks.
define('IA_ERROR_REPORTING', E_ALL & ~E_DEPRECATED & ~E_USER_WARNING & ~E_USER_NOTICE);

// If true then log all security checks.
// Warning: tons of output.
define('IA_LOG_SECURITY', false);

// If true then log disk cache hits/misses
define('IA_LOG_DISK_CACHE', false);

// If true then log mem cache hits/misses
define('IA_LOG_MEM_CACHE', false);

// Log each and every SQL query. Not for the faint of heart.
define('IA_LOG_SQL_QUERY', false);

// Try to EXPLAIN every select query, useful when optimizing.
define('IA_LOG_SQL_QUERY_EXPLAIN', false);

// Security setup for certain kinds of textblock actions
define('SEC_TEXTBLOCK_SIMPLE_VIEW_PRIVATE', ['admin']);
define('SEC_TEXTBLOCK_SIMPLE_REV_EDIT_PUBLIC', ['admin', 'helper', 'normal']);
define('SEC_TEXTBLOCK_SIMPLE_REV_EDIT_OTHER', ['admin']);

define('GOOGLE_ANALYTICS_TRACKING_ID', 'UA-113289-8');
define('GOOGLE_SEARCH', true);
// token obtained from Google CSE (ignored if GOOGLE_SEARCH is false)
define('GOOGLE_CSE_TOKEN', '');
define('GOOGLE_SITE_VERIFICATION', '');

// Monitor autorefresh options
define('MONITOR_AUTOREFRESH', true);
define('MONITOR_AUTOREFRESH_INTERVAL', 5000); // milliseconds

// Secure deletion: if true, prevent deleting tasks with attachments. Instead,
// require the user to explicitly delete all attachments first.
define('SECURE_DELETION', false);

define('ENABLED_COMPILERS', array(
    'c-32' => 'GNU C - 32bit',
    'cpp-32' => 'GNU C++ - 32bit',
    'c-64' => 'GNU C - 64bit',
    'cpp-64' => 'GNU C++ - 64bit',
    'fpc' => 'FreePascal',
    'java' => 'Java',
    'rs' => 'Rust',
    'py' => 'Python3 (FOARTE EXPERIMENTAL!)',
));

// Credits
define('COPYRIGHT_FIRST_YEAR', 2004);
define('SITE_NAME', 'infoarena');
define('COPYRIGHT_OWNER', 'Asociatia infoarena');
// If empty, the copyright owner won't have a hyperlink in the footer.
define('COPYRIGHT_OWNER_PAGE', 'Asociatia-infoarena');
define('ABOUT_PAGE', 'despre-infoarena');
