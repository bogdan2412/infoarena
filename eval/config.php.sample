<?php

// link main configuration
require_once __DIR__ . '/../Config.php';

// Judge username/password, used via HTTP AUTH basic to download tests and
// graders. Judge has to have admin access.
// Set a strong & secret password when putting this into production.
// Default works with svn.
define('IA_JUDGE_USERNAME', 'eval');
define('IA_JUDGE_PASSWORD', 'eval');

// Poll interval, in miliseconds.
define('IA_JUDGE_POLL_INTERVAL', 100);

// The user to run unsafe code as. This defaults to nobody.
define('IA_JUDGE_JRUN_UID', 65534);

// The group to run unsafe code as. This defaults to nobody.
define('IA_JUDGE_JRUN_GID', 65534);

// Niceness to run the unsafe code. 0 disables.
define('IA_JUDGE_JRUN_NICE', 0);

// Limit for compile
define('IA_JUDGE_COMPILE_TIMELIMIT', 15000);
define('IA_JUDGE_COMPILE_MEMLIMIT', 1024 * 1024);

// Time limit for graders.
define('IA_JUDGE_TASK_EVAL_TIMELIMIT', 5000);

// Memory limit for graders.
define('IA_JUDGE_TASK_EVAL_MEMLIMIT', 512 * 1024);

// Time limit for interactive programs.
define('IA_JUDGE_TASK_INTERACT_TIMELIMIT', 10000);

// Memory limit for interactive programs.
define('IA_JUDGE_TASK_INTERACT_MEMLIMIT', 512 * 1024);

// Maximum score per task.
define('IA_JUDGE_MAX_SCORE', 100);

// Maximum length allowed for a evaluator's feedback message
define('IA_JUDGE_MAX_EVAL_MESSAGE', 100);

// If true then keep all jails forever.
// This is useful in finding judge bugs.
define('IA_JUDGE_KEEP_JAILS', true);

// How much page cache memory to give the classic grader, in kilobytes.
// Cache is necessary when cgroups counts page cache towards used memory.
// This value should be larger than any conceivable output file. This is safe,
// because it can only be used by the kernel as file cache. Contestants cannot
// use it as RSS memory (ia-sandbox ensures this at the end).
define('IA_CACHE_MEMORY', 65536); // 64 megabytes

// Retry downloading grader data.
define('IA_JUDGE_MAX_GRADER_DOWNLOAD_RETRIES', 5);

// Add log timestamps.
// FIXME: horrible hack.
define('IA_LOG_TIMESTAMP_FORMAT', 'Y-m-d H:i:s');

// Rust support
define('IA_JUDGE_CARGO_PATH',
       rtrim(getenv('HOME'), '/') . '/.cargo');

define('IA_JUDGE_RUSTUP_PATH',
       rtrim(getenv('HOME'), '/') . '/.rustup');

// Path to the ia-sandbox binary
define('IA_SANDBOX_PATH', 'ia-sandbox');

// Should old eval.{c,cpp} files be compiled on 32 or 64 bits?
define('IA_DEFAULT_EVAL_ARCH', '32');

// Should the eval have access to the contestant's source file? This is
// necessary when some tasks have syntax requirements (e.g. the solution may
// not use arrays).
define('IA_EVAL_NEEDS_SOURCE', false);

// What should be mounted for the compiler jails. This can vary drastically
// between architectures and distros.
define('IA_COMPILER_MOUNTS', array(
    'c-32' => array(
        '/lib:/lib:exec',
        '/lib32:/lib32:exec',
        '/lib64:/lib64:exec',
        '/usr/lib32:/usr/lib32:exec',
        '/usr/bin:/usr/bin:exec',
        '/usr/lib:/usr/lib:exec',
        '/usr/include:/usr/include',
    ),
    'cpp-32' => array(
        '/lib:/lib:exec',
        '/lib32:/lib32:exec',
        '/lib64:/lib64:exec',
        '/usr/lib32:/usr/lib32:exec',
        '/usr/bin:/usr/bin:exec',
        '/usr/lib:/usr/lib:exec',
        '/usr/include:/usr/include',
    ),
    'c-64' => array(
        '/lib:/lib:exec',
        '/lib64:/lib64:exec',
        '/usr/bin:/usr/bin:exec',
        '/usr/lib:/usr/lib:exec',
        '/usr/include:/usr/include',
    ),
    'cpp-64' => array(
        '/lib:/lib:exec',
        '/lib64:/lib64:exec',
        '/usr/bin:/usr/bin:exec',
        '/usr/lib:/usr/lib:exec',
        '/usr/include:/usr/include',
    ),
    'pas' => array(
        '/lib:/lib:exec',
        '/lib64:/lib64:exec',
        '/usr/bin/:/usr/bin:exec',
        '/usr/lib:/usr/lib:exec',
        '/etc/alternatives:/etc/alternatives:exec',
    ),
    'fpc' => array(
        '/lib:/lib:exec',
        '/lib64:/lib64:exec',
        '/usr/bin/:/usr/bin:exec',
        '/usr/lib:/usr/lib:exec',
        '/etc/alternatives:/etc/alternatives:exec',
    ),
    'rs' => array(
        '/lib:/lib:exec',
        '/lib64:/lib64:exec',
        '/usr/bin:/usr/bin:exec',
        '/usr/lib:/usr/lib:exec',
        '/etc/alternatives:/etc/alternatives:exec',
        IA_JUDGE_CARGO_PATH.':/cargo:exec',
        IA_JUDGE_RUSTUP_PATH.':/rustup:exec',
    ),
    'py' => array(
        '/lib:/lib:exec',
        '/lib64:/lib64:exec',
        '/usr/bin:/usr/bin:exec',
        '/usr/lib:/usr/lib:exec',
    ),
    'java' => array(
        '/lib:/lib:exec',
        '/lib64:/lib64:exec',
        '/usr/bin:/usr/bin:exec',
        '/usr/lib:/usr/lib:exec',
        '/etc/alternatives:/etc/alternatives:exec',
    ),
));
