#! /usr/bin/env php
<?php

require_once dirname($argv[0]) . "/utilities.php";
require_once Config::ROOT."common/db/db_mysql.php";
require_once Config::ROOT."common/db/db.php";
require_once Config::ROOT.'common/statistics-config.php';

db_connect();

log_print("Computing top users table");

db_query("DROP TABLE IF EXISTS `ia_score_task_top_users`");
db_query("
    CREATE TABLE `ia_score_task_top_users` (
        `task_id` varchar(64) NOT NULL,
        `round_id` varchar(64) NOT NULL,
        `user_id` int(10) unsigned NOT NULL,
        `criteria` varchar(64) NOT NULL,
        `special_score` int(11) NOT NULL,
        `submit_time` datetime NOT NULL,
        `job_id` int(10) unsigned NOT NULL,
        PRIMARY KEY (`task_id`, `round_id`, `user_id`, `criteria`)
    )
");
log_print("Created table");

$criteria_column = array(
    'time' => 'exec_time',
    'memory' => 'mem_used',
    'size' => 'file_contents'
);

foreach ($criteria_column as $current => $column) {
    if ($current === 'size') {
        // no need to check tests
        $query = "
            SELECT `id` AS job_id, `user_id`, `round_id`, `task_id`, OCTET_LENGTH(`$column`) AS special_score, `submit_time`
            FROM `ia_job`
            WHERE `score` = 100 AND `status` = 'done'
            ORDER BY special_score ASC, `submit_time` ASC
        ";
    }
    else {
        $query = "
            SELECT `ia_job`.`id` AS job_id, `ia_job`.`user_id`, `ia_job`.`round_id`, `ia_job`.`task_id`, MAX(`ia_job_test`.`$column`) AS special_score, `ia_job`.`submit_time`
            FROM `ia_job`
            INNER JOIN `ia_job_test`
            ON `ia_job`.`id` = `ia_job_test`.`job_id`
            WHERE `ia_job`.`score` = 100 AND `ia_job`.`status` = 'done'
            GROUP BY `ia_job`.`id`, `ia_job`.`user_id`, `ia_job`.`round_id`, `ia_job`.`task_id`, `ia_job`.`submit_time`
            ORDER BY special_score ASC, `ia_job`.`submit_time` ASC
        ";
    }

    $result = db_query($query);
    $num_rows = db_num_rows($result);

    log_print("Total rows to process for $current: $num_rows");

    $total = 0;
    $task_entries_count = array();
    $task_users_entries = array();
    $values = '';
    while ($row = db_next_row($result)) {
        $job_id = $row['job_id'];
        $task_id = $row['task_id'];
        $round_id = $row['round_id'];
        $user_id = $row['user_id'];
        $special_score = $row['special_score'];
        $submit_time = $row['submit_time'];
        $pair = $task_id.",".$round_id;

        if (!array_key_exists($pair, $task_entries_count)) {
            $task_entries_count[$pair] = 0;
            $task_users_entries[$pair] = array();
        }

        if (!array_key_exists($user_id, $task_users_entries[$pair]) &&
            $task_entries_count[$pair] < IA_STATISTICS_MAX_TOP_SIZE) {
            $task_users_entries[$pair][$user_id] = true;
            if ($values !== "") {
                $values .= ",";
            }
            $values .= "('$task_id', '$round_id', $user_id, '$current', $special_score, '$submit_time', $job_id)";
            $task_entries_count[$pair]++;
            $total++;
        }
    }

    db_free($result);

    $query = "
        INSERT INTO `ia_score_task_top_users`
        VALUES $values
    ";
    db_query($query);

    log_print("Computed $total entries for $current");
}

?>
