#! /usr/bin/env php
<?php
require_once(dirname($argv[0]) . "/utilities.php");
require_once(IA_ROOT_DIR."common/db/task.php");
require_once(IA_ROOT_DIR."common/textblock.php");

function match($a, $b) {
    $len_a = strlen($a);
    $len_b = strlen($b);
    for ($i = 0, $j = -1; $i < $len_b; ++$i) {
        for (++$j; $j < $len_a && $a[$j] != $b[$i]; ++$j);
        if ($j == $len_a) return false;
    }
    return true;
}

function link_task($task, $page, $topic, $verbose = false) {
    if (!is_null($page["forum_topic"])) {
        $topic_id = $page["forum_topic"];
        // WTF, wrong topic?
        if ($topic_id == $topic['ID_TOPIC']) {
            if ($verbose) {
                log_print('"'.$task['id'].'" era deja legat de topic-ul "'.$topic['subject'].'".');
            }
            return false;
        }
        log_warn($task['id'].': Topic-ul vechi "'.$topic_id.'" este diferit de cel găsit: "'.$topic['ID_TOPIC'].'"!');
    }

    // Build new page
    $new_page = $page;
    $new_page["forum_topic"] = $topic["ID_TOPIC"];
    $new_page["timestamp"] = null;
    $new_page["user_id"] = 1; // update as "domino" :)

    // It worked
    if (count(textblock_validate($new_page)) == 0) {
        textblock_add_revision($new_page['name'], $new_page['title'],
                               $new_page['text'], $new_page['user_id'],
                               $new_page['security'], $new_page['timestamp'],
                               $new_page['creation_timestamp'],
                               $new_page['remote_ip_info']);
    } else {
        log_error('Eroare la validarea textblock-ului!');
        return false;
    }

    if ($verbose) {
        log_print('Am legat "'.$task['id'].'" de topic-ul "'.$topic['subject'].'".');
    }
    return true;
}

ini_set("memory_limit", "128M");

db_connect();

// validate argv
log_assert($argc >= 3, "Expecting arguments: round board [verbose]");
$round = $argv[1];
$board = $argv[2];
$verbose = getattr($argv, 3, false);

// get subjects from board
$query = sprintf("SELECT msg_in.ID_TOPIC, msg_in.subject FROM ia_smf_topics top_out
                  LEFT JOIN ia_smf_messages msg_in ON
                  msg_in.ID_MSG = (SELECT MIN(ID_MSG) FROM ia_smf_messages msg_in WHERE msg_in.ID_TOPIC = top_out.ID_TOPIC)
                  WHERE top_out.ID_BOARD = %d AND locked = 0",
                  db_escape($board));
// uppercase topic subject
$topics = db_fetch_all($query);
foreach ($topics as &$topic) {
    $topic['subject'] = strtoupper($topic['subject']);
}

// get tasks
$total = 0;
$tasks = task_get_all();

// try to match each task
foreach ($tasks as $task) {
    // does this task belong to the round we want?
    $parent_rounds = task_get_parent_rounds($task['id']);
    $found = false;
    foreach ($parent_rounds as $round_id) {
        if ($round_id == $round) {
            $found = true;
        }
    }
    if (!$found) {
        continue;
    }

    // match based on task id
    $str1 = strtoupper(($task['order']-1).$task['id']);

    // match based on textblock title
    $page = textblock_get_revision($task['page_name']);
    if (!$page) {
        log_warn("Lipsește pagina pentru ".$task['id']."!");
        continue;
    }
    $str2 = strtoupper(($task['order']-1).$task['title']);

    if ($task['order'] <= 10) {
        $str1 = "00".$str1;
        $str2 = "00".$str2;
    }
    if ($task['order'] > 10 && $task['order'] <= 100) {
        $str1 = "0".$str1;
        $str2 = "0".$str2;
    }

    $found = null;
    for ($i = count($topics)-1; $i >= 0; --$i) {
        if (match($topics[$i]['subject'], $str1) || match($topics[$i]['subject'], $str2)) {
            $found = $topics[$i];
            break;
        }
    }

    if (!$found) {
        // number in forum might be wrong
        log_warn('Numărul pentru problema "'.$task['id'].'" este greșit! Am căutat '.$str1.' si '.$str2);
        $str1 = strtoupper($task['id']);
        $str2 = strtoupper($task['title']);
        for ($i = count($topics)-1; $i >= 0; --$i) {
            if (match($topics[$i]['subject'], $str1) || match($topics[$i]['subject'], $str2)) {
                $found = $topics[$i];
                break;
            }
        }
    }

    if (!$found) {
        log_warn('Nu am găsit topic pentru "'.$task['id']."\"!");
        continue;
    }

    if (link_task($task, $page, $found, $verbose)) {
        $total++;
    }
}
log_print('*** S-au modificat '.$total.' probleme!');

?>
