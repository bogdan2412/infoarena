#! /usr/bin/env php
<?php
require_once(dirname($argv[0]) . "/utilities.php");
require_once(Config::ROOT . "common/attachment.php");

$verbose = getattr($argv, 1, false);

db_connect();
$files = db_fetch_all("SELECT `id`, `page`, `name`, `mime_type`
                       FROM `ia_file`");
if ($verbose) {
    log_print(count($files) . " rows fetched.");
}

$nr_notfound = 0;
$nr_changed = 0;

foreach ($files as $file) {
    $file_path = attachment_get_filepath($file);

    if (is_file($file_path)) {
        if (is_grader_testfile($file['name']) &&
            is_problem_page($file['page'])) {
            if (!is_textfile($file['mime_type'])) {
                log_print('Test file ' . $file['name'] . ' on page ' .
                          $file['page'] . ' of size ' . filesize($file_path) .
                          ' has an unexpected mime type: ' .
                          $file['mime_type']);
                if (read_bool('Do you want to skip file?', true)) {
                    continue;
                }
            }

            if (add_ending_newline($file_path)) {
                if ($verbose) {
                    log_print("Added newline to file " . $file_path);
                }
                db_query("UPDATE `ia_file`" .
                         " SET `size` = " . db_quote(filesize($file_path)) .
                         " WHERE `id` = " . db_quote((int)$file['id']));
                $nr_changed++;
            }
        }
    } else {
        $nr_notfound++;
    }
}

if ($verbose) {
    log_print($nr_changed . " grader testfiles updated.");
    log_print($nr_notfound . " files not found.");
}

?>
