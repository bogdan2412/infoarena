#! /usr/bin/env php
<?php

// Runs a series of apache benchmarks.

require_once(dirname($argv[0]) . "/utilities.php");

// URLs to benchmark
$benchmark_urls = array(
    IA_URL . "arhiva",
    IA_URL . "utilizator/domino?action=download&file=avatar&resize=L32x32",
    IA_URL . "template/preoni-2006?action=download&file=hlogo.gif",
    IA_URL . "utilizator/domino",
    IA_URL . "changes",
    IA_URL . "clasament-rating",
    IA_URL . "monitor",
    IA_URL . "monitor?first_entry=63425",
    IA_URL . "monitor?task=fractii&round=arhiva&first_entry=3550",
    IA_URL . "monitor?user=gabitzish1&first_entry=4550",
    IA_URL . "monitor?first_entry=53425&round=arhiva&status=done&compiler=cpp",
    IA_URL . "links",
    IA_URL . "problema/adunare",
    IA_URL . "preoni-2007/runda-1/9",
    IA_URL . "unirea-2007/rezultate-9-10",
    IA_URL . "utilizator/domino?action=stats",
    IA_URL . "bogdan2412/cache-stress-test",
);

// parse options
// -n number_tests -c concurrency
$options = getopt("n:c:");
$benchmark_n = getattr($options, 'n', 200);
$benchmark_c = getattr($options, 'c', 1);

// benchmark command line
$benchmark_cmd = "ab -k -n {$benchmark_n} -c $benchmark_c %url% 2>&1";

// run benchmarks
log_print("Running {$benchmark_n} tests for each URL");
foreach ($benchmark_urls as $url) {
    $cmd = str_replace("%url%", escapeshellarg($url), $benchmark_cmd);

    $output = shell_exec($cmd);

    $ret = preg_match('/Requests per second:\s*([0-9.]+)\s/', $output, $match);
    if (!$ret) {
        log_var_dump($output);
        log_error("Failed parsing ab output");
    }
    $req = $match[1];
    $req_unit = 'reqs/s';

    $ret = preg_match('/Transfer rate:\s*([0-9.]+)/', $output, $match);
    if (!$ret) {
        log_var_dump($output);
        log_error("Failed parsing ab output");
    }
    $trans = $match[1];
    $trans_unit = 'kb/s';

    // pretty print
    log_print("$url\t$req $req_unit\t$trans $trans_unit");
}

?>
